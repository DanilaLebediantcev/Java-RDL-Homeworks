1)Open io.humb1t.Main.java and compare different approaches in iterations. Write down your thoughts, what is your favourite option?
Which one is easier to read and which one is easier to write? Why?

I like implementation with for each, because it is more readable and easy to understand.
But now I read more information about stream api and think that it will be more convenient to use it

2)Add numeric field to Order class, use it to filter collection of orders by some criteria (more than 50 order items for example).

Main class

3)Imagine the situation - you need to implement queue) of incoming requests, to process incoming requests we have 3 independent "processors".
How can we design our application in such a case and what pros and cons we would face in different approaches?
Write down your thoughts and implement one possible solution.

It is important that the flows are independent so as not to interfere with each other.
Main class, MyThread

4)Imagine the situation when you have a Collection and should remove all duplicates in it. How would you do it?
Implement your solution using only Java SE.

Main Class
We can create Set using our List or we can use  "distinct" method of stream

5)There is an old war between ArrayList and Linked List - choose new fighters and implement your own benchmark (Vector vs Queue for example).
Write down your thoughts.

Task5 class

6)Map is very good in implementation of simple caches). Implement your own cache using Map.
Task6 class